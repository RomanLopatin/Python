"""coding=utf-8
7.1
 Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
 заданный случайными числами на промежутке [-100; 100).
 Выведите на экран исходный и отсортированный массивы.
Примечания:
● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""
import random


def sort_bubble(array_):
    n = 1
    while n < len(array_):
        no_change = True
        # здесь в цикле можно идти не до конца, поскольку на каждом шаге
        # очереднеое место с конца занимает 'правильный' элемент и проверка не нужна
        for i in range(len(array_) - n):
            if array_[i] < array_[i + 1]:
                array_[i], array_[i + 1] = array_[i + 1], array_[i]
                no_change = False
        n += 1
        # print(array_)
        # если во вложенном цикле изменений не было - значит уже все ок и можно закругляться
        if no_change:
            break
    return array


num = 10
min_ = -100
max_ = 99
array = [random.randint(min_, max_) for i in range(num)]
# array = [56, -41, -31, 50, -53, -93, 67, 52, 52, 23]
print(f'Исходный массив: {array}')
print(f'Массив, отсортированный по убыванию: {sort_bubble(array)}')
